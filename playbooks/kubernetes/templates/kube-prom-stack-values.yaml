# Values yaml for the Kube-Prometheus-Stack Helm Chart
#
# Full values: https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml

# Since k3s uses sql-lite, we cannot monitor etcd
defaultRules:
  rules:
    etcd: false

kubeEtcd:
  enabled: false

# matched to service port 'prom-stack-kube-prometheus-kube-controller-manager' -n kube-system
kubeControllerManager:
  enabled: true

  endpoints:
    - '{{ kube_controller_mgr_ip }}'

  service:
    enabled: true
    port: '{{ kube_controller_mgr_port }}'
    targetPort: '{{ kube_controller_mgr_port }}'

  serviceMonitor:
    enabled: true
    https: true
    insecureSkipVerify: true

kubeScheduler:
  enabled: true
  endpoints:
    - '{{ kube_scheduler_ip }}'
  service:
    enabled: true
    port: '{{ kube_scheduler_port }}'
    targetPort: '{{ kube_scheduler_port }}'
  serviceMonitor:
    enabled: true
    https: true
    insecureSkipVerify: true

# matched to service port 'prom-stack-kube-prometheus-kube-proxy' -n kube-system
kubeProxy:
  enabled: true
  endpoints:
    - '{{ kube_proxy_ip }}'
  service:
    enabled: true
    port: '{{ kube_proxy_port }}'
    targetPort: '{{ kube_proxy_port }}'

# Configuration for Alert manager https://prometheus.io/docs/alerting/alertmanager/
alertmanager:
  enabled: false

  ingress:

    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx

    hosts: [ '*.alertmanager' ]
    paths: [ '/' ]

    # TLS configuration for Alert Manager Ingress
    # secret must be manually created in the namespace
    tls: [ ]
    # - secretName: alertmanager-general-tls
    #   hosts:
    #   - alertmanager.example.com

  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: nfs-client
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 5Gi
    externalUrl: https://alertmanager.k3s.local/
    routePrefix: /

  tplConfig: false
  # INSTEAD rely on helm --set-file "alertmanager.templateFiles.email\.default\.html\.tmpl"=pathtofile
  #templateFiles:
  #  email.default.html.tmpl: |-
  #    ...
  #  email.default.txt.tmpl: |-
  #    ...

  config:
    global:
      resolve_timeout: 5m
      # global smtp settings
      smtp_from: amgr@k3s
      smtp_smarthost: 10.43.235.116:1025
      smtp_require_tls: false

    route:
      group_by: [ 'alertname' ]
      group_wait: 2s # not default 30
      group_interval: 30s # not default 5m
      repeat_interval: 4h # not default 12h
      receiver: email_platform
      routes:
        - receiver: 'null'
          matchers:
            - alertname =~ "InfoInhibitor|Watchdog"
        - receiver: email_platform
          continue: true
    receivers:
      - name: email_platform
        email_configs:
          - to: platform@k3s
            send_resolved: true
            headers:
              subject: "{{ .Status | toUpper }} {{ .CommonLabels.env }}:{{ .CommonLabels.cluster }} {{ .CommonLabels.alertname }}"
            #html: "{{ range .Alerts }}{{ .Annotations.description }}<br/>{{ end }}"
            # proper syntax for external template ready by alertmanager
            # defining both these values will send email in multipart/alternative
            #html: '{{ template "emaildefaulthtml" . }}'
            #text: '{{ template "emaildefaulttxt" . }}'

      - name: 'null'
    templates:
      - '/etc/alertmanager/config/*.tmpl'