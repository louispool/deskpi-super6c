# Installs the cert-manager package, which adds certificates and certificate issuers as resource types
# in Kubernetes clusters, and simplifies the process of obtaining, renewing and using those certificates.
#
# https://cert-manager.io/
---
- name: Install cert-manager.
  hosts: control_plane

  gather_facts: true
  become: true

  environment:
    # The location of the kubeconfig file on the master.
    K8S_AUTH_KUBECONFIG: /etc/rancher/k3s/k3s.yaml

  vars_files:
    - ../../config.yml

  tasks:

      # See https://artifacthub.io/packages/helm/cert-manager/cert-manager
    - name: Add cert-manager chart repo.
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: "https://charts.jetstack.io"

    - name: Deploy cert-manager
      kubernetes.core.helm:
        name: cert-manager
        chart_ref: jetstack/cert-manager
        namespace: cert-manager
        create_namespace: yes
        state: present
        values:
          installCRDs: true
          # Configure "Let's Encrypt" as the default certificate issuer
          # which enables the use of the kube-lego: kubernetes.io/tls-acme: "true"
          ingressShim.defaultIssuerName: letsencrypt-prod
          ingressShim.defaultIssuerKind: ClusterIssuer
          ingressShim.defaultIssuerGroup: cert-manager.io

    - name: Verify the cert-manager installation
      kubernetes.core.k8s_info:
        kind: Pod
        wait: yes
        namespace: cert-manager
        wait_sleep: 10
        wait_timeout: 360
        wait_condition:
          type: Ready
          status: "True"

    - name: Create Lets-Encrypt ClusterIssuer
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('template', './templates/lets-encrypt-cluster-issuer.yml') | from_yaml }}"