# Playbook for preparing the Deskpi Super6c cluster
---

  # See https://askubuntu.com/questions/1371732/what-is-the-purpose-of-cgroup-enable-cpuset-cgroup-enable-memory-cgroup-memory-1
- name: Enable Control Groups for CPU and Memory
  hosts: cluster
  gather_facts: false
  become: true

  vars_files:
    - config.yml

  tasks:
    # Add  "cgroup_enable=cpu" if not already present
    - include_tasks: cmdline.yml
      vars:
        key: cgroup_enable
        value: cpu
        update: false

    # Add "cgroup_enable=memory" if not already present
    - include_tasks: cmdline.yml
      vars:
        key: cgroup_enable
        value: memory
        update: false

  # Set or update static ip configuration, for example: "ip=192.168.2.200::192.168.2.1:255.255.255.0:deskpi1:eth0:off"
- name: Set Static IP and Hostname
  hosts: cluster

  gather_facts: false
  become: true

  vars_files:
    - config.yml

  tasks:
    - include_tasks: cmdline.yml
      vars:
        key: ip
        value: '{{ ip + "::" + gateway + ":" + subnet + ":" + inventory_hostname + ":eth0:off" }}'
        update: true

  # Add required software dependencies
- name: Add prerequisite software packages
  hosts: cluster

  gather_facts: false
  become: true

  tasks:
    - name: Ensure required dependencies are installed
      package:
        name:
          - python3-pip
          - python3-setuptools
          - build-essential
          - golang
          - git
          - podman
          - lvm2
          - iptables
        state: present

    - name: Ensure required Python libraries are installed
      pip:
        name:
          - openshift
          - pyyaml
        state: present

    - name: Update all software packages
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist

    - name: Gather the installed packages and their versions
      package_facts:
        manager: auto

    # For IP Tables < v1.8.6 we need to switch to legacy (see https://docs.k3s.io/advanced#additional-preparation-for-debian-buster-based-distributions)
    - name: Check whether IP Tables >= v1.8.6 is installed
      block:
        - debug:
            msg: "Unsupported version {{ ansible_facts.packages['iptables'][0].version }} of iptables is installed - setting preferred to legacy"
        - shell: |
            iptables -F
            update-alternatives --set iptables /usr/sbin/iptables-legacy
            update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy
      when: "'iptables' in ansible_facts.packages and ansible_facts.packages['iptables'][0].version is version('1.8.6', '<')"

  # Copy .bashrc, .vimrc etc.
- name: Copy Bash Config Files
  hosts: cluster

  gather_facts: false
  become: true

  vars_files:
    - config.yml

  tasks:
    - name: "Copy .bashrc"
      copy:
        src: ./resources/.bashrc
        dest: /home/{{ ansible_user }}
    - name: "Copy .bash_functions"
      copy:
        src: ./resources/.bash_functions
        dest: /home/{{ ansible_user }}
    - name: "Copy .vimrc"
      copy:
        src: ./resources/.vimrc
        dest: /home/{{ ansible_user }}
      notify:
        - Reboot PI

  # Reboot the PI
  handlers:
    - name: Reboot PI
      reboot:
        msg: "Reboot initiated by Ansible"
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: whoami