# Values for OpenSearch Community HELM chart
# https://github.com/opensearch-project/helm-charts/blob/main/charts/opensearch/values.yaml
---
clusterName: {{ opensearch_cluster_name }}
nodeGroup: {{ opensearch_node_group }}

image:
  tag: "{{ opensearch_app_version }}"

# Introduce staggered startup to avoid race conditions that can occur when a cluster with too many replicas all start at once
initContainers:
  - name: delay-init
    image: busybox
    command:
      - sh
      - -c
      - |
        i=${HOSTNAME##*-}
        sleep $((i * 10 + 5))

extraVolumes:
  - name: http-tls
    secret:
      secretName: opensearch-http-cert-secret
  - name: transport-tls
    secret:
      secretName: opensearch-transport-cert-secret
  - name: admin-tls
    secret:
      secretName: opensearch-admin-secret

extraVolumeMounts:
  - name: http-tls
    mountPath: /usr/share/opensearch/config/http-certs
    readOnly: yes
  - name: transport-tls
    mountPath: /usr/share/opensearch/config/transport-certs
    readOnly: yes
  - name: admin-tls
    mountPath: /usr/share/opensearch/config/admin-certs
    readOnly: yes

extraEnvs:
  - name: DISABLE_INSTALL_DEMO_CONFIG
    value: "true"

#  Ensure the pod doesnâ€™t fall back to pod IPs
env:
  - name: network.publish_host
    valueFrom:
      fieldRef:
        fieldPath: metadata.name

config:
  opensearch.yml: |
    cluster.name: {{ opensearch_cluster_name }}

    # Bind to all interfaces because we don't know what IP address Docker will assign to us.
    network.host: 0.0.0.0

    # Ensure all OpenSearch nodes connect via DNS names, not pod IP
    network.publish_host: ${HOSTNAME}.{{ opensearch_cluster_name }}-{{ opensearch_node_group }}-headless.{{ k3s_opensearch_namespace }}.svc.cluster.local
    discovery.seed_hosts:
      - {{ opensearch_cluster_name }}-{{ opensearch_node_group }}-headless.{{ k3s_opensearch_namespace }}.svc.cluster.local
    cluster.initial_master_nodes:
{% for i in range(opensearch_replicas | int) %}
      - {{ opensearch_cluster_name }}-{{ opensearch_node_group }}-{{ i }}
{% endfor %}

    plugins:
      security:
        allow_default_init_securityindex: true
        ssl:
          http:
            enabled: false  # Disable HTTP SSL since we define a separate Ingress with TLS termination for the REST API
            pemcert_filepath: http-certs/tls.crt
            pemkey_filepath: http-certs/tls.key
            pemtrustedcas_filepath: http-certs/ca.crt
          transport:
            pemcert_filepath: transport-certs/tls.crt
            pemkey_filepath: transport-certs/tls.key
            pemtrustedcas_filepath: transport-certs/ca.crt
        authcz:
          admin_dn:
            - "CN=admin,OU=client,O=org"
        nodes_dn:
          - "CN={{ opensearch_cluster_name }}-{{ opensearch_node_group }}.{{ k3s_opensearch_namespace }}.svc.cluster.local"
        audit:
          type: internal_opensearch
        enable_snapshot_restore_privilege: true
        check_snapshot_restore_write_privileges: true
        restapi:
          roles_enabled: ["all_access", "security_rest_api_access"]
        system_indices:
          enabled: true
          indices:
            [
              ".opendistro-alerting-config",
              ".opendistro-alerting-alert*",
              ".opendistro-anomaly-results*",
              ".opendistro-anomaly-detector*",
              ".opendistro-anomaly-checkpoints",
              ".opendistro-anomaly-detection-state",
              ".opendistro-reports-*",
              ".opendistro-notifications-*",
              ".opendistro-notebooks",
              ".opendistro-asynchronous-search-response*",
            ]

replicas: {{ opensearch_replicas | default(3) }}

resources:
  limits:
    memory: {{ opensearch_resources_limits_memory | default('4Gi') }}
    cpu: {{ opensearch_resources_limits_cpu | default('2000m') }}
  requests:
    memory: {{ opensearch_resources_requests_memory | default('2Gi') }}
    cpu: {{ opensearch_resources_requests_cpu | default('1000m') }}

persistence:
  enabled: true
  size: {{ opensearch_pvc_size | default('30Gi') }}
  storageClass: {{ opensearch_storage_class | default('longhorn') }}

roles:
  - master
  - data
  - ingest

affinity:
  # Anti-affinity rules to ensure that OpenSearch pods are not scheduled on the same node.
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - opensearch
        topologyKey: kubernetes.io/hostname

# Only necessary if you have applied a corresponding taint to certain nodes in your cluster to
# repel general workloads and reserve those nodes for OpenSearch. For example:
# kubectl taint nodes <node-name> opensearch=true:NoSchedule
{% if opensearch_enable_node_tolerations is sameas true %}
tolerations:
  - key: "opensearch"
    operator: "Exists"
    effect: "NoSchedule"
{% endif %}

securityConfig:
  enabled: true
  config:
    securityConfigSecret: opensearch-security-config-secret
    dataComplete: true

service:
  type: ClusterIP

{% if opensearch_enable_monitoring is sameas true %}
# Installs the prometheus-exporter plugin needed for serving metrics.
# NOTE: OpenSearch plugins much match exactly in major.minor.path version to the OpenSearch instance it's running in, e.g. plugins versions 2.8.0.x work only with OpenSearch 2.8.0,
# At the time of writing there is no exporter plugin matching v3.0.0 of OpenSearch.
plugins:
  enabled: true
  installList:
    # For releases up to v2.17.1
    - https://github.com/opensearch-project/opensearch-prometheus-exporter/releases/download/{{ opensearch_app_version }}.0/prometheus-exporter-{{ opensearch_app_version }}.0.zip
    # For releases from v2.18.0 to v.2.19.1
    # - https://github.com/Virtimo/prometheus-exporter-plugin-for-opensearch/releases/download/{{ opensearch_app_version }}/prometheus-exporter-{{ opensearch_app_version}}.0.zip
serviceMonitor:
  enabled: true
  basicAuth:
    enabled: true
    existingSecret: opensearch-monitoring-creds
{% endif %}