# This defines the YAML configuration files necessary for the OpenSearch Security plugin.
# See https://github.com/opensearch-project/security/tree/main/config
#
# Take care not to override static roles, action groups tenants etc. They are reserved by the plugin and can be found at
# https://github.com/opensearch-project/security/tree/main/src/main/resources/static_config
#
# Some users are hardcoded, like `admin`, `kibanaserver`, `snapshotrestore` they are required for normal operation of OpenSearch.
---
apiVersion: v1
kind: Secret
metadata:
  name: opensearch-security-config-secret
  namespace: {{ k3s_opensearch_namespace }}
type: Opaque
stringData:
  config.yml: |
    ---
    _meta:
      type: "config"
      config_version: 2

    config:
      dynamic:
        http:
          anonymous_auth_enabled: false
        authc:
          basic_internal_auth_domain:
            description: "Internal user authentication via HTTP Basic"
            http_enabled: true
            transport_enabled: true
            order: 0
            http_authenticator:
              type: basic
              challenge: true
            authentication_backend:
              type: internal

  internal_users.yml: |
    ---
    _meta:
      type: "internalusers"
      config_version: 2

    # Hardcoded user for OpenSearch admininistration
    admin:
      hash: "{{ opensearch_admin_passwd_hash }}"
      reserved: true
      backend_roles:
        - "admin"
      description: "Admin user"

    # Hardcoded user for OpenSearch Dashboards
    kibanaserver:
      hash: "{{ opensearch_kibana_server_passwd_hash }}"
      reserved: true
      backend_roles:
        - "kibanaserver"
      description: "OpenSearch Dashboards internal server user"

    # Hardcoded user for restoring snapshots
    snapshotrestore:
      hash:  "{{ opensearch_snapshot_restore_passd_hash }}"
      reserved: false
      backend_roles:
        - "snapshot_restore"
      description: "Snapshot restore user, using external role mapping"

    {{ opensearch_dashboards_user}}:
      hash: "{{ opensearch_dashboards_user_passwd_hash }}"
      reserved: false
      backend_roles:
        - "kibanauser"
        - "readall"
      description: "OpenSearch Dashboards read-only user"

    {{ opensearch_logger_user}}:
      hash: "{{ opensearch_logger_passwd_hash }}"
      reserved: false
      backend_roles:
        - "logstash"
        - "fluentbit"
      description: "Log ingestion user"

    {{ opensearch_monitoring_user}}:
      hash: "{{ opensearch_monitoring_passwd_hash }}"
      reserved: false
      backend_roles:
        - "prometheus"
      description: "Monitoring user"

  roles.yml: |
    ---
    _meta:
      type: "roles"
      config_version: 2

    admin:
      cluster_permissions:
        - "*"
      index_permissions:
        - index_patterns:
            - "*"
          allowed_actions:
            - "*"
      tenant_permissions:
        - tenant_patterns:
            - "admin_tenant"
          allowed_actions:
            - "kibana_all_read"
            - "kibana_all_write"

    fluentbit:
      description: "Provide the permissions for the fluentbit logger"
      cluster_permissions:
        - cluster:monitor/*
      index_permissions:
        - index_patterns:
            - "*fluent-bit*"
            - "logs-*"
            - "*-logs"
          allowed_actions:
            - "crud"
            - "create_index"

    prometheus_exporter:
      description: "Permissions needed by Prometheus Exporter"
      cluster_permissions:
        - cluster:monitor/*
      index_permissions:
        - index_patterns:
            - "*"
          allowed_actions:
            - indices:monitor/*
            - read

  roles_mapping.yml: |
    ---
    _meta:
      type: "rolesmapping"
      config_version: 2

    # Static role which all full access to all indices and cluster operations
    all_access:
      reserved: false
      backend_roles:
        - "admin"
      description: "Maps admin to all_access"

    # Static role which allow full access to indices named like the user
    own_index:
      reserved: false
      users:
        - "*"
      description: "Allow full access to an index named like the username"

    # Static role that provides read-only access to all indices
    readall:
      reserved: false
      backend_roles:
        - "readall"

    # Static role that provides read-only access to all indices and monitoring of the cluster
    readall_and_monitor:
      reserved: false
      backend_roles:
        - "prometheus"

    # Static role that provides minimum permissions for managing snapshots
    manage_snapshots:
      reserved: false
      backend_roles:
        - "snapshot_restore"

    # Static role which provide minimum permissions to the OpenSearch Dashboards
    kibana_user:
      reserved: false
      backend_roles:
        - "kibanauser"

    # Static role which provide admin permissions to the OpenSearch Dashboards
    kibana_server:
      reserved: true
      users:
        - "kibanaserver"

    # Static role that provides minimum permissions for logstash and beats
    logstash:
      reserved: false
      backend_roles:
        - "logstash"

    admin:
      reserved: false
      backend_roles:
        - "admin"

    fluentbit:
      reserved: false
      backend_roles:
        - "fluentbit"

    prometheus_exporter:
      reserved: false
      backend_roles:
        - "prometheus"

  tenants.yml: |
    ---
    _meta:
      type: "tenants"
      config_version: 2

    admin_tenant:
      description: "Tenant for admin"
      reserved: false
      hidden: false

  action_groups.yml: |
    ---
    _meta:
      type: "actiongroups"
      config_version: 2