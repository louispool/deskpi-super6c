# Includes tasks to setup the Lets-Encrypt CA using cert-manager
#
# It also ensures that Kubernetes CoreDNS will forward DNS queries to public DNS servers as opposed
# to the local resolvers on the node.
#
# We do this because if the nodeâ€™s resolver points to an internal network DNS server (say, your router or an internal DNS forwarder),
# and that internal DNS server has wildcard overrides for your domain or routes outbound traffic in non-standard ways,
# it might resolve "acme-v02.api.letsencrypt.org" to the public ingress IP (or worse, intercept outbound HTTPS traffic altogether).
---

# Ensures that CoreDNS will forward DNS queries to public DNS servers
- name: Get current CoreDNS configmap
  kubernetes.core.k8s_info:
    api_version: v1
    kind: ConfigMap
    namespace: kube-system
    name: coredns
  register: coredns_cm

- name: Check if CoreDNS ConfigMap should be updated
  ansible.builtin.set_fact:
    coredns_cm_needs_update: "{{
      coredns_cm.resources | length > 0 and
      'data' in coredns_cm.resources[0] and
      'Corefile' in coredns_cm.resources[0].data and
      coredns_cm.resources[0].data.Corefile is search('forward\\s+\\.\\s+\\/etc\\/resolv\\.conf')
    }}"

- name: Replace "forward" line in CoreDNS' ConfigMap (if necessary)
  ansible.builtin.set_fact:
    new_corefile: "{{ coredns_cm.resources[0].data.Corefile | regex_replace('forward\\s+\\.\\s+\\/etc\\/resolv\\.conf', 'forward . 1.1.1.1 8.8.8.8') }}"
  when: coredns_cm_needs_update

- name: Apply updated CoreDNS ConfigMap (if modified)
  kubernetes.core.k8s:
    api_version: v1
    kind: ConfigMap
    namespace: kube-system
    name: coredns
    definition:
      metadata:
        name: coredns
        namespace: kube-system
      data:
        Corefile: "{{ new_corefile }}"
    state: present
  when: coredns_cm_needs_update

- name: Restart CoreDNS pods if ConfigMap was updated
  kubernetes.core.k8s:
    api_version: v1
    kind: Pod
    namespace: kube-system
    label_selectors:
      - "k8s-app=kube-dns"
    state: absent
  when: coredns_cm_needs_update

# Create the Lets-Encrypt CA
- name: Create Lets-Encrypt CA and Issuer
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'templates/lets-encrypt-ca.yml.j2') }}"