# Tasks to install the cert-manager package, which adds certificates and certificate issuers as resource types
# in Kubernetes clusters, and simplifies the process of obtaining, renewing and using those certificates.
#
# https://cert-manager.io/
---

# See https://artifacthub.io/packages/helm/cert-manager/cert-manager
- name: Add cert-manager chart repo.
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: "https://charts.jetstack.io"

- name: Deploy cert-manager
  kubernetes.core.helm:
    name: cert-manager
    chart_ref: jetstack/cert-manager
    namespace: "{{ k3s_cert_manager_namespace }}"
    create_namespace: yes
    state: present
    values:
      installCRDs: true
      # Configure "Let's Encrypt" as the default certificate issuer
      # which enables the use of the kube-lego: kubernetes.io/tls-acme: "true"
#      ingressShim.defaultIssuerName: letsencrypt-prod
#      ingressShim.defaultIssuerKind: ClusterIssuer
#      ingressShim.defaultIssuerGroup: cert-manager.io

- name: Wait for Pods to be ready
  kubernetes.core.k8s_info:
    kind: Pod
    wait: yes
    namespace: "{{ k3s_cert_manager_namespace }}"
    wait_sleep: 10
    wait_timeout: 360
    wait_condition:
      type: Ready
      status: "True"

- name: Configure Self-Signed CA
  include_tasks: setup-self-signed-ca.yml
  when: enable_selfsigned

- name: Setup the AWS environment for Route53
  include_tasks: setup-aws-env.yml
  when: enable_route53

- name: Configure Route53 DDNS
  include_tasks: setup-route53-ddns.yml
  when: enable_route53

- name: Create Lets-Encrypt CA
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'templates/lets-encrypt-ca.yml.j2') }}"
  when: enable_letsencrypt and enable_route53

