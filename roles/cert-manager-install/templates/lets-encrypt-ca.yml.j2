# Creates the Cluster Issuer to enable "Let's Encrypt" to issue certificates for our public domain (see https://letsencrypt.org/)
# using AWS Route53 (see https://aws.amazon.com/route53/) for the DNS-01 challenge.
#
# Make sure you have set the right environment variables, including email.
#
# Take note that when using the production ClusterIssuer, you might quickly run into problems if you try and fail too many times,
# causing "Let's Encrypt" to ignore you for a while.
#
---
# Store the AWS IAM User credentials in a secret
apiVersion: v1
kind: Secret
metadata:
  name: route53-credentials-secret
  namespace: "{{ k3s_cert_manager_namespace }}"
type: Opaque
data:
  access-key-id: "{{ aws_access_key_id | b64encode }}"
  secret-access-key: "{{ aws_secret_access_key | b64encode }}"

---
# This Issuer defines Let's Encrypt to issue certificates using Route53 for the DNS-01 challenge.
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  # Note the ClusterIssuer name should end with "-issuer"
  name: {{ public_tls_issuer }}
spec:
  acme:
    # You must replace this email address with your own - see config.yml
    # Let's Encrypt will use this to contact you about expiring certificates and issues related to your account.
    email: {{ email }}
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: {{ public_ca }}-issuer-secret
    solvers:
      # DNS-01 challenge: https://cert-manager.io/docs/configuration/acme/dns01/
      #
      # Supported DNS providers: https://cert-manager.io/docs/configuration/acme/dns01/#supported-dns01-providers
      - dns01:
          route53:
            region: "{{ aws_region }}"
            hostedZoneId: "{{ aws_hosted_zone_id }}"
            accessKeyIDSecretRef:
              name: route53-credentials-secret
              key: access-key-id
            secretAccessKeySecretRef:
              name: route53-credentials-secret
              key: secret-access-key

---
# Define a Certificate resource to request TLS Certificates for the public domain
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ public_ca }}-cert
  namespace: {{ k3s_cert_manager_namespace }}
spec:
  secretName: {{ public_ca }}-cert-secret
  issuerRef:
    name: {{ public_tls_issuer }}
    kind: ClusterIssuer
  dnsNames:
    - "{{ public_domain }}"
    - "*.{{ public_domain }}"
