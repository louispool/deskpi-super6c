# Provisions Service Monitors, Prometheus Rules, and Grafana Dashboards for monitoring
# - Longhorn
# - Traefik
---
- name: Check that the Monitoring namespace exists
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Namespace
    name: "{{ k3s_monitoring_namespace }}"
  register: ns_info

- name: Fail if namespace does not exist
  fail:
    msg: "Namespace '{{ k3s_monitoring_namespace }}' does not exist."
  when: ns_info.resources | length == 0

- name: Configure Service Monitor for Traefik
  kubernetes.core.k8s:
    definition: "{{ lookup('template', 'templates/traefik-service-monitor.yml.j2') | from_yaml_all }}"
    state: present
  when: k3s_traefik_namespace is defined

- name: Configure Prometheus Rules for Traefik
  kubernetes.core.k8s:
    definition: "{{ lookup('template', 'templates/traefik-prometheus-rules.yml.j2') | from_yaml_all }}"
    state: present
  when: k3s_traefik_namespace is defined

- name: Upload Traefik Grafana dashboard
  uri:
    url: "https://{{ grafana_dashboard }}/api/dashboards/db"
    method: POST
    user: "{{ grafana_admin_user }}"
    password: "{{ grafana_admin_passwd }}"
    force_basic_auth: true
    headers:
      Content-Type: "application/json"
    body_format: json
    body:
      dashboard: "{{ lookup('file', 'files/traefik-grafana-dashboard.json') | from_json }}"
      overwrite: true
    validate_certs: false
  when: k3s_traefik_namespace is defined

- name: Configure Service Monitor for Longhorn
  kubernetes.core.k8s:
    definition: "{{ lookup('template', 'templates/longhorn-service-monitor.yml.j2') | from_yaml_all }}"
    state: present
  when: k3s_enable_block_storage and k3s_longhorn_namespace is defined

- name: Configure Prometheus Rules for Longhorn
  kubernetes.core.k8s:
    definition: "{{ lookup('template', 'templates/longhorn-prometheus-rules.yml.j2') | from_yaml_all }}"
    state: present
  when: k3s_enable_block_storage and k3s_longhorn_namespace is defined

- name: Upload Longhorn Grafana dashboard
  uri:
    url: "https://{{ grafana_dashboard }}/api/dashboards/db"
    method: POST
    user: "{{ grafana_admin_user }}"
    password: "{{ grafana_admin_passwd }}"
    force_basic_auth: true
    headers:
      Content-Type: "application/json"
    body_format: json
    body:
      dashboard: "{{ lookup('file', 'files/longhorn-grafana-dashboard.json') | from_json }}"
      overwrite: true
    validate_certs: false
  when: k3s_enable_block_storage and k3s_longhorn_namespace is defined
